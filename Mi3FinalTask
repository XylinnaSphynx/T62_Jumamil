//Mi3FinalTask
//Jumamil, Xena Princess Moriell
//T62 Computer Graphics Programming

#include <GL/glut.h> // OpenGL Utility ToolKit Library

void display(); // Declare A Function
void reshape(int, int);


// PROCESS - Display
int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_RGB); // Sets Display To RGB

    glutInitWindowPosition(300, 0); // Program Screen Position
    glutInitWindowSize(600, 600); // Program Window Size
    glutCreateWindow("Mi3FinalTask"); // Window Title

    glutDisplayFunc(display); // Call Display Function
    glutReshapeFunc(reshape);

    glClearColor(0.0f, 0.0f, 0.11f, 0.0f); // Very Dark Blue
    glutMainLoop(); // Loop All Functions
}

// PROCESS - Object
void display()
{
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glLoadIdentity();


    // RECTANGLE - Top
    glColor3f(1.0, 0.5, 0.5); // Tulip
    glBegin(GL_QUADS); //<--- Quadrilateral
    glVertex2f(9.8, 5);
    glVertex2f(-9.8, 5);
    glVertex2f(-9.8, 0);
    glVertex2f(9.8, 0);

    // RECTANGLE - Bottom
    glColor3f(0.5, 0.0, 0.5); // Fresh Eggplant
    glBegin(GL_QUADS); //<--- Quadrilateral
    glVertex2f(9.8, 0);
    glVertex2f(-9.8, 0);
    glVertex2f(-9.8, -5);
    glVertex2f(9.8, -5);

    glEnd(); // Creation Ended
    glFlush(); // Force Execution

    // TRIANGLE
    glColor3f(0.5, 0.5, 1.0); // Blueberry
    glBegin(GL_TRIANGLES); //<--- Triangle
    glVertex2f(-2, 0);
    glVertex2f(-9.8, 5);
    glVertex2f(-9.8, -5);

    glEnd(); // Creation Ended
    glFlush(); // Force Execution

    // SQUARE - Big
    glColor3f(0.0, 0.0, 0.0); // Black
    glBegin(GL_QUADS); //<--- Quadrilateral
    glVertex2f(-6.2, 0.8);
    glVertex2f(-7.8, 0.8);
    glVertex2f(-7.8, -0.8);
    glVertex2f(-6.2, -0.8);

    // SQUARE - Small - 1
    glColor3f(1.0, 1.0, 1.0); // White
    glBegin(GL_QUADS); //<--- Quadrilateral
    glVertex2f(-3.4, 0.4);
    glVertex2f(-4.2, 0.4);
    glVertex2f(-4.2, -0.4);
    glVertex2f(-3.4, -0.4);

    // SQUARE - Small - 2
    glColor3f(1.0, 1.0, 1.0); // White
    glBegin(GL_QUADS); //<--- Quadrilateral
    glVertex2f(-8.7, 3.8);
    glVertex2f(-9.5, 3.8);
    glVertex2f(-9.5, 3.0);
    glVertex2f(-8.7, 3.0);


    // SQUARE - Small - 3
    glColor3f(1.0, 1.0, 1.0); // White
    glBegin(GL_QUADS); //<--- Quadrilateral
    glVertex2f(-8.7, -3.8);
    glVertex2f(-9.5, -3.8);
    glVertex2f(-9.5, -3.0);
    glVertex2f(-8.7, -3.0);

    glEnd(); // Creation Ended
    glFlush(); // Force Execution

}

// PROCESS - Height and Width
void reshape(int w, int h)
{
    glViewport(0, 0, (GLsizei)w, (GLsizei)h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-10, 10, -10, 10);
    glMatrixMode(GL_MODELVIEW);
}
